{
    "description": "Нажмите ``Начать прохождение`` для отображения вопросов и выберите самый подходящий ответ",
    "difficulty": 1,
    "duration": "PT0H30M",
    "materialType": "test",
    "passingScore": 100,
    "questions": [
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Удаленный репозиторий приложений и зависимостей будет обновлен до последней версии.",
                    "comment": "Когда в терминале Linux выдается команда **apt-get upgrade**, все установленные приложения будут пытаться обновиться до последней доступной версии.",
                    "correct": false
                },
                {
                    "answer": "Каждое установленное приложение обновится до последней версии.",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Обновления операционной системы загружены и будут установлены.",
                    "comment": "Когда в терминале Linux выдается команда **apt-get upgrade**, все установленные приложения будут пытаться обновиться до последней доступной версии.",
                    "correct": false
                },
                {
                    "answer": "Будет установлено специальное приложение с именем upgrade.",
                    "comment": "Когда в терминале Linux выдается команда **apt-get upgrade**, все установленные приложения будут пытаться обновиться до последней доступной версии.",
                    "correct": false
                }
            ],
            "question": "Системный администратор запускает команду **apt-get update** в операционной системе Linux. Какова цель этой команды?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Все активные интерфейсы будут отображать информацию.",
                    "comment": "Команда **ifconfig** с модификатором **-a** предоставит информацию обо всех сетевых интерфейсах, даже если они отключены.",
                    "correct": false
                },
                {
                    "answer": "И активные, и неактивные интерфейсы будут отображать информацию.",
                    "comment": "Команда **ifconfig** с модификатором **-a** предоставит информацию обо всех сетевых интерфейсах, даже если они отключены.",
                    "correct": true
                },
                {
                    "answer": "Отобразится таблица ARP компьютера.",
                    "comment": "Команда **ifconfig** с модификатором **-a** предоставит информацию обо всех сетевых интерфейсах, даже если они отключены.",
                    "correct": false
                },
                {
                    "answer": "Отобразится таблица маршрутизации хоста.",
                    "comment": "Команда **ifconfig** с модификатором **-a** предоставит информацию обо всех сетевых интерфейсах, даже если они отключены.",
                    "correct": false
                }
            ],
            "question": "Сетевому инженеру необходимо проверить состояние всех сетевых интерфейсов сервера под управлением операционной системы Linux. Инженер вводит команду **ifconfig -a**. Каков результат этой команды?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "текущее использование оперативной памяти",
                    "comment": "Команду **ps** можно комбинировать с несколькими модификаторами для отображения всех процессов, запущенных на компьютере, просмотра определенного процесса или завершения процессов, использующих процессорное время.",
                    "correct": false
                },
                {
                    "answer": "текущее использование жесткого диска",
                    "comment": "Команду **ps** можно комбинировать с несколькими модификаторами для отображения всех процессов, запущенных на компьютере, просмотра определенного процесса или завершения процессов, использующих процессорное время.",
                    "correct": false
                },
                {
                    "answer": "текущий статус сетевой карты",
                    "comment": "Команду **ps** можно комбинировать с несколькими модификаторами для отображения всех процессов, запущенных на компьютере, просмотра определенного процесса или завершения процессов, использующих процессорное время.",
                    "correct": false
                },
                {
                    "answer": "активные процессы, использующие процессорное время",
                    "comment": "",
                    "correct": true
                }
            ],
            "question": "Системный администратор пытается определить, что заставляет компьютер работать медленнее, чем обычно. Администратор выдает команду **ps**. Что показывает эта команда?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "использовать другую учетную запись пользователя",
                    "comment": "Несколько команд терминала требуют использования команды **sudo** в качестве предисловия. Команда **sudo** означает «суперпользователь». **Sudo** потребует ввести пароль администратора для завершения настройки. Вредоносное программное обеспечение обычно не может причинить вред само по себе, не зная пароля.",
                    "correct": false
                },
                {
                    "answer": "используйте команду **sudo**",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "определить другой сетевой интерфейс",
                    "comment": "Несколько команд терминала требуют использования команды **sudo** в качестве предисловия. Команда **sudo** означает «суперпользователь». **Sudo** потребует ввести пароль администратора для завершения настройки. Вредоносное программное обеспечение обычно не может причинить вред само по себе, не зная пароля.",
                    "correct": false
                },
                {
                    "answer": "изменить разрешения **chmod** в файле конфигурации сети",
                    "comment": "Несколько команд терминала требуют использования команды **sudo** в качестве предисловия. Команда **sudo** означает «суперпользователь». **Sudo** потребует ввести пароль администратора для завершения настройки. Вредоносное программное обеспечение обычно не может причинить вред само по себе, не зная пароля.",
                    "correct": false
                }
            ],
            "question": "Администратор Linux пытается использовать терминал для настройки сетевой карты на компьютере. Администратор получает сообщение о том, что у администратора нет необходимых прав для выполнения настройки. Что нужно сделать перед командой конфигурации?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "**ls**",
                    "comment": "Команда Linux **ls** с параметром **-l** используется для отображения содержимого в текущем каталоге с помощью «длинного списка», в котором содержится дополнительная информация о каждом файле или подкаталоге, такая как разрешения, владелец, размер и дата создания.",
                    "correct": false
                },
                {
                    "answer": "****",
                    "comment": "ls -l",
                    "correct": true
                },
                {
                    "answer": "**ls -a**",
                    "comment": "Команда Linux **ls** с параметром **-l** используется для отображения содержимого в текущем каталоге с помощью «длинного списка», в котором содержится дополнительная информация о каждом файле или подкаталоге, такая как разрешения, владелец, размер и дата создания.",
                    "correct": false
                },
                {
                    "answer": "**ls -lr**",
                    "comment": "Команда Linux **ls** с параметром **-l** используется для отображения содержимого в текущем каталоге с помощью «длинного списка», в котором содержится дополнительная информация о каждом файле или подкаталоге, такая как разрешения, владелец, размер и дата создания.",
                    "correct": false
                }
            ],
            "question": "Пользователь вводит команду Linux, и отображается результат:\n```\ntotal 40\ndrwxr-xr-x 2 devasc devasc 4096 Mar 30 21:25 Desktop\ndrwxr-xr-x 2 devasc devasc 4096 Apr 15 19:09 Documents\ndrwxr-xr-x 2 devasc devasc 4096 Apr 15 19:09 Downloads\ndrwxr-xr-x 5 devasc devasc 4096 Mar 30 21:21 labs\ndrwxr-xr-x 2 devasc devasc 4096 Apr 15 19:09 Music\ndrwxr-xr-x 2 devasc devasc 4096 Apr 15 19:09 Pictures\ndrwxr-xr-x 2 devasc devasc 4096 Apr 15 19:09 Public\ndrwxr-xr-x 5 devasc devasc 4096 Mar 30 21:24 snap\ndrwxr-xr-x 2 devasc devasc 4096 Apr 15 19:09 Templates\ndrwxr-xr-x 2 devasc devasc 4096 Apr 15 19:09 Videos\ndevasc@labvm:~$\n```\nКакая команда Linux используется для отображения содержимого текущего каталога, как показано?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "/",
                    "comment": "Команда Linux **cd** используется для перехода из текущего каталога в другой каталог в файловой системе. Команда **cd** с опцией **..** или **../** переместится вверх на один каталог. Эту опцию можно использовать в формате нескольких **../..** для перемещения нескольких каталогов в структуре каталогов.",
                    "correct": false
                },
                {
                    "answer": "/home",
                    "comment": "Команда Linux **cd** используется для перехода из текущего каталога в другой каталог в файловой системе. Команда **cd** с опцией **..** или **../** переместится вверх на один каталог. Эту опцию можно использовать в формате нескольких **../..** для перемещения нескольких каталогов в структуре каталогов.",
                    "correct": false
                },
                {
                    "answer": "/home/devasc/",
                    "comment": "Команда Linux **cd** используется для перехода из текущего каталога в другой каталог в файловой системе. Команда **cd** с опцией **..** или **../** переместится вверх на один каталог. Эту опцию можно использовать в формате нескольких **../..** для перемещения нескольких каталогов в структуре каталогов.",
                    "correct": false
                },
                {
                    "answer": "/home/devasc/labs",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "/home/devasc/labs/ansible",
                    "comment": "Команда Linux **cd** используется для перехода из текущего каталога в другой каталог в файловой системе. Команда **cd** с опцией **..** или **../** переместится вверх на один каталог. Эту опцию можно использовать в формате нескольких **../..** для перемещения нескольких каталогов в структуре каталогов.",
                    "correct": false
                }
            ],
            "question": "Пользователь выполняет ряд команд Linux, как показано на рисунке.\n```\n(опущено)$ pwd\n/home/devasc/labs/ansible/backups\n(опущено)$ cd ../..\n```\nКакой каталог является текущим после ввода команды **cd**?"
        },
        {
            "answerType": "multiChoice",
            "answers": [
                {
                    "answer": "Все пользователи могут запускать файл.",
                    "comment": "Команда **ls -l** предоставляет формат «длинного списка» с дополнительной информацией, которая включает следующее:\nТип файла: дефис ( **-** ) обозначает обычный файл, **d** обозначает каталог.\nПрава доступа к файлу: первые три буквы представляют права владельца файла на файл, следующие три буквы представляют права группы на файл, а последние три буквы представляют разрешения других на файл. Символы-разрешения следующие:\n**r** - прочитать или скопировать файл\n**w** - записать в файл\n**х** - выполнить файл\nдефис ( **-** ) - значение не присвоено\nКоличество жестких ссылок на файл: в данном случае 1\nВладелец файла: в данном случае я\nФайловая группа: тест в данном случае\nРазмер файла: 15 байт в этом случае",
                    "correct": false
                },
                {
                    "answer": "Пользователь с идентификатором пользователя self может изменять файл.",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Пользователь с идентификатором пользователя devasc может изменять файл.",
                    "comment": "Команда **ls -l** предоставляет формат «длинного списка» с дополнительной информацией, которая включает следующее:\nТип файла: дефис ( **-** ) обозначает обычный файл, **d** обозначает каталог.\nПрава доступа к файлу: первые три буквы представляют права владельца файла на файл, следующие три буквы представляют права группы на файл, а последние три буквы представляют разрешения других на файл. Символы-разрешения следующие:\n**r** - прочитать или скопировать файл\n**w** - записать в файл\n**х** - выполнить файл\nдефис ( **-** ) - значение не присвоено\nКоличество жестких ссылок на файл: в данном случае 1\nВладелец файла: в данном случае я\nФайловая группа: тест в данном случае\nРазмер файла: 15 байт в этом случае",
                    "correct": false
                },
                {
                    "answer": "Любой пользователь в группе test может выполнить файл.",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Любой пользователь в группе self может читать, изменять и выполнять файл.",
                    "comment": "Команда **ls -l** предоставляет формат «длинного списка» с дополнительной информацией, которая включает следующее:\nТип файла: дефис ( **-** ) обозначает обычный файл, **d** обозначает каталог.\nПрава доступа к файлу: первые три буквы представляют права владельца файла на файл, следующие три буквы представляют права группы на файл, а последние три буквы представляют разрешения других на файл. Символы-разрешения следующие:\n**r** - прочитать или скопировать файл\n**w** - записать в файл\n**х** - выполнить файл\nдефис ( **-** ) - значение не присвоено\nКоличество жестких ссылок на файл: в данном случае 1\nВладелец файла: в данном случае я\nФайловая группа: тест в данном случае\nРазмер файла: 15 байт в этом случае",
                    "correct": false
                }
            ],
            "question": "Пользователь вводит команду Linux **ls -l myfile.sh**, чтобы проверить права доступа к файлу myfile.sh.\n```\ndevasc@labvm:~/Documents$ ls -l myfile.sh\n-rwxr-xr-- 1 self test 15 Mar 30 21:24 myfile.sh\n```\nКакие два утверждения описывают разрешения, назначенные файлу? (Выберите два.)"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "**grep '{0-9}' /etc/passwd**",
                    "comment": "Команду **grep** Linux можно использовать для обработки текста построчно и для печати любых строк, соответствующих указанному шаблону. Шаблоны сопоставления основаны на модификаторах запросов регулярных выражений (регулярных выражений), используемых для выбора соответствующего содержимого. Вот некоторые модификаторы запросов регулярных выражений:\n_ (подчеркивание): соответствует пробелу\n_ ^ (вставка): указывает на начало строки\n_ $ (знак доллара): указывает на конец строки\n_ . (точка): соответствует одному символу, включая пробел\n_ * (звездочка): соответствует нулю или более вхождений предшествующего символа\n_ [ ] (квадратная скобка): соответствует символу\n_ { } (фигурная скобка): повторяет предыдущий символ",
                    "correct": false
                },
                {
                    "answer": "**grep '[0-9]' /etc/passwd**",
                    "comment": "Команду **grep** Linux можно использовать для обработки текста построчно и для печати любых строк, соответствующих указанному шаблону. Шаблоны сопоставления основаны на модификаторах запросов регулярных выражений (регулярных выражений), используемых для выбора соответствующего содержимого. Вот некоторые модификаторы запросов регулярных выражений:\n_ (подчеркивание): соответствует пробелу\n_ ^ (вставка): указывает на начало строки\n_ $ (знак доллара): указывает на конец строки\n_ . (точка): соответствует одному символу, включая пробел\n_ * (звездочка): соответствует нулю или более вхождений предшествующего символа\n_ [ ] (квадратная скобка): соответствует символу\n_ { } (фигурная скобка): повторяет предыдущий символ",
                    "correct": false
                },
                {
                    "answer": "**grep '^[0-9]' /etc/passwd**",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "**grep '_[0-9]' /etc/passwd**",
                    "comment": "Команду **grep** Linux можно использовать для обработки текста построчно и для печати любых строк, соответствующих указанному шаблону. Шаблоны сопоставления основаны на модификаторах запросов регулярных выражений (регулярных выражений), используемых для выбора соответствующего содержимого. Вот некоторые модификаторы запросов регулярных выражений:\n_ (подчеркивание): соответствует пробелу\n_ ^ (вставка): указывает на начало строки\n_ $ (знак доллара): указывает на конец строки\n_ . (точка): соответствует одному символу, включая пробел\n_ * (звездочка): соответствует нулю или более вхождений предшествующего символа\n_ [ ] (квадратная скобка): соответствует символу\n_ { } (фигурная скобка): повторяет предыдущий символ",
                    "correct": false
                }
            ],
            "question": "Системный администратор Linux ищет в файле passwd любое имя пользователя, начинающееся с цифры. Какую команду **grep** должен использовать администратор?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Файл myfile.sh копируется и переименовывается в myfile2.sh в текущем каталоге.",
                    "comment": "Команду **mv** Linux можно использовать либо для перемещения файла в другой каталог, либо для переименования файла. Синтаксис команды: **mv** *source destination*. В этом случае имя файла назначения отличается, и файл переименовывается после перемещения.",
                    "correct": false
                },
                {
                    "answer": "Файл myfile.sh копируется в каталог /home/devasc/Desktop и переименовывается в myfile2.sh.",
                    "comment": "Команду **mv** Linux можно использовать либо для перемещения файла в другой каталог, либо для переименования файла. Синтаксис команды: **mv** *source destination*. В этом случае имя файла назначения отличается, и файл переименовывается после перемещения.",
                    "correct": false
                },
                {
                    "answer": "Файл myfile.sh перемещается в каталог /home/devasc/Desktop и переименовывается в myfile2.sh.",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Файл myfile.sh копируется в каталог /home/devasc/Desktop и заменяет файл myfile2.sh.",
                    "comment": "Команду **mv** Linux можно использовать либо для перемещения файла в другой каталог, либо для переименования файла. Синтаксис команды: **mv** *source destination*. В этом случае имя файла назначения отличается, и файл переименовывается после перемещения.",
                    "correct": false
                }
            ],
            "question": "Пользователь вводит команды, как показано. Каков результат после ввода команды **mv**?\n```\ndevasc@labvm:~/Documents$ pwd\n/home/devasc/Documents\ndevasc@labvm:~/Documents$ mv myfile.sh ../Desktop/myfile2.sh\n```\n"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "**def**",
                    "comment": "Команды **if** и **else** используются для условной логики. Команды **for** и **while** используются для логики повторения, а **from** — для импорта модулей.",
                    "correct": false
                },
                {
                    "answer": "**delay**",
                    "comment": "Команды **if** и **else** используются для условной логики. Команды **for** и **while** используются для логики повторения, а **from** — для импорта модулей.",
                    "correct": false
                },
                {
                    "answer": "**if**",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "**from**",
                    "comment": "Команды **if** и **else** используются для условной логики. Команды **for** и **while** используются для логики повторения, а **from** — для импорта модулей.",
                    "correct": false
                }
            ],
            "question": "Какая команда Python создает структуру условного управления?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "(syntaxerror) -... так как между числовыми значениями не должно быть пробела",
                    "comment": "Интерпретатор Python выполнит операцию и отобразит результат 32.",
                    "correct": false
                },
                {
                    "answer": "[22]+[10]",
                    "comment": "Интерпретатор Python выполнит операцию и отобразит результат 32.",
                    "correct": false
                },
                {
                    "answer": "32",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "ничего (потому что команда print неверна)",
                    "comment": "Интерпретатор Python выполнит операцию и отобразит результат 32.",
                    "correct": false
                }
            ],
            "question": "Что отображается после ввода следующего кода в интерпретатор Python?\n```\naddition = 22 +10\nprint(addition)\n```\n"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "[1,2,4,5,3,6]",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "[1,2,3,4,5,6]",
                    "comment": "Интерпретатор Python выполняет объединение двух списков без изменения порядка элементов списка.",
                    "correct": false
                },
                {
                    "answer": "[12]+[9]",
                    "comment": "Интерпретатор Python выполняет объединение двух списков без изменения порядка элементов списка.",
                    "correct": false
                },
                {
                    "answer": "[21]",
                    "comment": "Интерпретатор Python выполняет объединение двух списков без изменения порядка элементов списка.",
                    "correct": false
                }
            ],
            "question": "Что получится, если ввести следующий код в интерпретатор программы Python?\n```\n[1,2,4,5] + [3,6]\n```\n"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "'Test2'",
                    "comment": "Python можно использовать для умножения чисел, а также строк. Строка, умноженная на целое число, даст несколько копий строки. Поскольку переменная y равна 2, слово Test указано дважды.",
                    "correct": false
                },
                {
                    "answer": "'Test6'",
                    "comment": "Python можно использовать для умножения чисел, а также строк. Строка, умноженная на целое число, даст несколько копий строки. Поскольку переменная y равна 2, слово Test указано дважды.",
                    "correct": false
                },
                {
                    "answer": "'TestTest'",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "'TestTestTestTestTestTest'",
                    "comment": "Python можно использовать для умножения чисел, а также строк. Строка, умноженная на целое число, даст несколько копий строки. Поскольку переменная y равна 2, слово Test указано дважды.",
                    "correct": false
                },
                {
                    "answer": "TypeError: строковый тип не может быть умножен на целое число.",
                    "comment": "Python можно использовать для умножения чисел, а также строк. Строка, умноженная на целое число, даст несколько копий строки. Поскольку переменная y равна 2, слово Test указано дважды.",
                    "correct": false
                }
            ],
            "question": "Студент изучает Python в режиме интерактивного интерпретатора. Учащийся подает команды:\n```\n>>> y=2\n>>> y*3\n6\n>>> 'Test'*y\n```\n"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "['RT1', 'RT2', 'SW2', 'RT3', 'SW3']",
                    "comment": "В Python два списка можно объединить с помощью оператора +. Второй список добавляется к первому списку и создает новый список. На элемент в списке можно ссылаться и управлять им, используя его индекс. Первый элемент списка индексируется как ноль, второй — как единица и так далее.",
                    "correct": false
                },
                {
                    "answer": "['RT1', 'RT2', 'SW1', 'RT3', 'SW3']",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "['RT1', 'RT2', 'RT3', 'SW2', 'SW3']",
                    "comment": "В Python два списка можно объединить с помощью оператора +. Второй список добавляется к первому списку и создает новый список. На элемент в списке можно ссылаться и управлять им, используя его индекс. Первый элемент списка индексируется как ноль, второй — как единица и так далее.",
                    "correct": false
                },
                {
                    "answer": "['RT1', 'RT2', 'SW1', 'SW2', 'SW3']",
                    "comment": "В Python два списка можно объединить с помощью оператора +. Второй список добавляется к первому списку и создает новый список. На элемент в списке можно ссылаться и управлять им, используя его индекс. Первый элемент списка индексируется как ноль, второй — как единица и так далее.",
                    "correct": false
                }
            ],
            "question": "Студент, плохо знакомый с Python, работает в режиме интерактивного интерпретатора. Учащийся подает команды:\n```\n>>> devicenames=[\"RT1\", \"RT2\", \"SW1\", \"SW2\"]\n>>> hostnames=devicenames + [\"RT3\", \"SW3\"]\n>>> del hostnames[3]\n>>> hostnames\n```\n"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "list",
                    "comment": "В Python переменную, использующую тип словаря, можно создать, поместив последовательность элементов в фигурные скобки {}, разделенные запятой. Каждый элемент в словаре содержит пару значений, одно из которых является ключом, а другой соответствующий элемент пары является присвоенным ему значением в формате ключ:значение.",
                    "correct": false
                },
                {
                    "answer": "tuple",
                    "comment": "В Python переменную, использующую тип словаря, можно создать, поместив последовательность элементов в фигурные скобки {}, разделенные запятой. Каждый элемент в словаре содержит пару значений, одно из которых является ключом, а другой соответствующий элемент пары является присвоенным ему значением в формате ключ:значение.",
                    "correct": false
                },
                {
                    "answer": "array",
                    "comment": "В Python переменную, использующую тип словаря, можно создать, поместив последовательность элементов в фигурные скобки {}, разделенные запятой. Каждый элемент в словаре содержит пару значений, одно из которых является ключом, а другой соответствующий элемент пары является присвоенным ему значением в формате ключ:значение.",
                    "correct": false
                },
                {
                    "answer": "dictionary",
                    "comment": "",
                    "correct": true
                }
            ],
            "question": "Студент, плохо знакомый с Python, работает в режиме интерактивного интерпретатора. Учащийся подает команды:\n```\n>>> ipAddress = {\"R1\":\"10.1.1.1\",\"R2\":\"10.2.2.1\",\"R3\":\"10.3.3.1\"}\n```\nКакой тип данных используется для представления переменной ipAddress?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "**ipAddress[R2]**",
                    "comment": "В Python на объект внутри структуры словаря ссылаются с помощью его ключа, который заключен в квадратные скобки [ ].",
                    "correct": false
                },
                {
                    "answer": "**ipAddress['R2']**",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "**ipAddress{'R2'}**",
                    "comment": "В Python на объект внутри структуры словаря ссылаются с помощью его ключа, который заключен в квадратные скобки [ ].",
                    "correct": false
                },
                {
                    "answer": "**ipAddress{\"R2\"}**",
                    "comment": "В Python на объект внутри структуры словаря ссылаются с помощью его ключа, который заключен в квадратные скобки [ ].",
                    "correct": false
                }
            ],
            "question": "Студент, плохо знакомый с Python, работает в режиме интерактивного интерпретатора. Ученик подает команду:\n```\n>>> ipAddress = {\"R1\":\"10.1.1.1\",\"R2\":\"10.2.2.1\",\"R3\":\"10.3.3.1\"}\n```\nКакое выражение Python можно использовать для получения IP-адреса R2?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "когда вводится строка",
                    "comment": "В этом скрипте оператор ``elif`` выполняется, если оператор ``if`` ложен и находится перед оператором ``else``.",
                    "correct": false
                },
                {
                    "answer": "когда оператор ``if`` ложен",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "когда вводится число с плавающей запятой",
                    "comment": "В этом скрипте оператор ``elif`` выполняется, если оператор ``if`` ложен и находится перед оператором ``else``.",
                    "correct": false
                },
                {
                    "answer": "когда первый оператор ``print`` терпит неудачу",
                    "comment": "В этом скрипте оператор ``elif`` выполняется, если оператор ``if`` ложен и находится перед оператором ``else``.",
                    "correct": false
                }
            ],
            "question": "Студент изучает Python и просматривает сценарий Python следующим образом:\n```\naclNum = int(input(\"What is the IPv4 ACL number? \"))\nif aclNum >= 1 and aclNum <= 99:\n     print(\"This is a standard IPv4 ACL.\")\nelif aclNum >=100 and aclNum <= 199:\n     print(\"This is an extended IPv4 ACL.\")\nelse:\n     print(\"This is not a standard or extended IPv4 ACL.\")\n```\nПри каком условии будет ``elif`` будет выполнен?"
        }
    ],
    "skills": {},
    "tags": {
        "$ref": "../../material-tags.json"
    },
    "title": "Экзамен: Модуль 1. Введение в курс",
    "assets": {
        "$ref": "./assets"
    }
}