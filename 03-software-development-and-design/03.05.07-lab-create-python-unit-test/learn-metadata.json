{
    "title": "Лабораторная работа. Создание модульного теста Python",
	"shortName": "lab-3.5.7",
    "materialType": "lab",
    "description": "Модульные тесты проверяют независимые единицы кода, такие как функции, классы, модули и библиотеки. Есть много причин для написания скрипта с использованием библиотеки Python unittest. Одна из очевидных причин заключается в том, что, если вы обнаружите проблему в изолированном коде путем преднамеренного тестирования, вы знаете, что проблема заключается в функции или другом тестируемом модуле. Проблема не в большом приложении, которое может вызывать эту функцию. Вы также будете точно знать, что вызвало ошибку, поскольку вы написали модульный тест, который выявил проблему. Ошибки, обнаруженные таким образом, обычно быстро и легко исправляются, а исправления, сделанные на этом подробном уровне, с меньшей вероятностью вызовут непредвиденные побочные эффекты позже в другом коде, который полагается на проверенный код.",
    "difficulty": 1,
    "duration": "PT0H22M",
    "tags": [
        "Cisco",
        "Devnet"
    ],
    "credentialsSchema": {
        "userName": {
            "title": "Имя пользователя",
            "source": "learn_user"
        },
        "password": {
            "title": "Пароль",
            "source": "learn_password"
        },
        "consoleURL": {
            "title": "Адрес портала",
            "value": "https://portal.skillscloud.company"
        }
    },
    "skills": {},
    "testProjectPath": "./README.md",
	"deploymentPath": "deploy",
    "assetsPath": "assets"
}