{
    "title": "Экзамен: Проектирование и разработка ПО",
    "description": "Нажмите ``Начать прохождение`` для отображения вопросов и выберите самый подходящий ответ",
    "difficulty": 1,
    "duration": "PT0H30M",
    "materialType": "test-exam",
    "passingScore": 100,
    "questions": [
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Каждый шаг в процессе должен быть завершен до начала следующего шага.",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Несколько шагов процесса запускаются одновременно.",
                    "comment": "Водопадная модель — это самый ранний подход SDLC. Фазы следуют линейному последовательному потоку, где каждая фаза начинается только тогда, когда предыдущая фаза завершена.",
                    "correct": false
                },
                {
                    "answer": "Задачи процесса разбиваются на ограниченные по времени итерации, называемые спринтами.",
                    "comment": "Водопадная модель — это самый ранний подход SDLC. Фазы следуют линейному последовательному потоку, где каждая фаза начинается только тогда, когда предыдущая фаза завершена.",
                    "correct": false
                },
                {
                    "answer": "Она подчеркивает устранение напрасных усилий и максимизирует потребительскую ценность.",
                    "comment": "Водопадная модель — это самый ранний подход SDLC. Фазы следуют линейному последовательному потоку, где каждая фаза начинается только тогда, когда предыдущая фаза завершена.",
                    "correct": false
                }
            ],
            "question": "Какое утверждение описывает методологию разработки программного обеспечения Waterfall?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "исключение излишних трат",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "укрепление целостности",
                    "comment": "Методология Lean SDLC основана на семи принципах, направленных на минимизацию потерь и максимизацию ценности для клиента. Принцип устранения отходов является наиболее фундаментальным, и именно из него вытекают все остальные принципы.",
                    "correct": false
                },
                {
                    "answer": "максимально быстрая доставка",
                    "comment": "Методология Lean SDLC основана на семи принципах, направленных на минимизацию потерь и максимизацию ценности для клиента. Принцип устранения отходов является наиболее фундаментальным, и именно из него вытекают все остальные принципы.",
                    "correct": false
                },
                {
                    "answer": "усиление обучения",
                    "comment": "Методология Lean SDLC основана на семи принципах, направленных на минимизацию потерь и максимизацию ценности для клиента. Принцип устранения отходов является наиболее фундаментальным, и именно из него вытекают все остальные принципы.",
                    "correct": false
                }
            ],
            "question": "Какой фундаментальный принцип бережливого производства формирует основу, из которой вытекают все остальные принципы бережливого производства?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "блокирует текущую виртуальную среду",
                    "comment": "Linux- команда **pip3 freeze** используется для вывода списка пакетов Python 3, установленных в текущей рабочей среде.",
                    "correct": false
                },
                {
                    "answer": "подготавливает среду перед установкой пакета Python",
                    "comment": "Linux- команда **pip3 freeze** используется для вывода списка пакетов Python 3, установленных в текущей рабочей среде.",
                    "correct": false
                },
                {
                    "answer": "выводит список установленных пакетов Python",
                    "comment": "Linux- команда **pip3 freeze** используется для вывода списка пакетов Python 3, установленных в текущей рабочей среде.",
                    "correct": true
                },
                {
                    "answer": "деактивирует текущую виртуальную среду",
                    "comment": "",
                    "correct": false
                }
            ],
            "question": "Разработчик запускает команду Linux `pip3 freeze` в активированной виртуальной среде Python 3. Какую функцию выполняет команда?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Он управляет данными, логикой и правилами приложения.",
                    "comment": "Шаблон проектирования Model-View-Controller (MVC) абстрагирует код и ответственность на три отдельных компонента: модель, представление и контроллер. Контроллер принимает ввод, манипулирует данными и отправляет обработанные данные в модель. Представление — это визуальное представление данных. Может быть несколько представлений одних и тех же данных.",
                    "correct": false
                },
                {
                    "answer": "Он принимает выбранные данные и отображает визуальное представление для пользователя.",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Он принимает ввод и применяет необходимые правила для форматирования данных.",
                    "comment": "Шаблон проектирования Model-View-Controller (MVC) абстрагирует код и ответственность на три отдельных компонента: модель, представление и контроллер. Контроллер принимает ввод, манипулирует данными и отправляет обработанные данные в модель. Представление — это визуальное представление данных. Может быть несколько представлений одних и тех же данных.",
                    "correct": false
                },
                {
                    "answer": "Он запрашивает пользовательский ввод и манипулирует им, чтобы он соответствовал формату модели.",
                    "comment": "Шаблон проектирования Model-View-Controller (MVC) абстрагирует код и ответственность на три отдельных компонента: модель, представление и контроллер. Контроллер принимает ввод, манипулирует данными и отправляет обработанные данные в модель. Представление — это визуальное представление данных. Может быть несколько представлений одних и тех же данных.",
                    "correct": false
                }
            ],
            "question": "Какова роль компонента представления в потоке Model-View-Controller (MVC)?"
        },
        {
            "answerType": "multiChoice",
            "answers": [
                {
                    "answer": "Это собственность Microsoft",
                    "comment": "Git доступен для MacOS, Windows и Linux/Unix. Это реализация распределенной системы контроля версий с открытым исходным кодом.",
                    "correct": false
                },
                {
                    "answer": "Это собственность Cisco",
                    "comment": "Git доступен для MacOS, Windows и Linux/Unix. Это реализация распределенной системы контроля версий с открытым исходным кодом.",
                    "correct": false
                },
                {
                    "answer": "Это VCS с открытым исходным кодом",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Это распределенная VCS",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Это централизованная VCS",
                    "comment": "Git доступен для MacOS, Windows и Linux/Unix. Это реализация распределенной системы контроля версий с открытым исходным кодом.",
                    "correct": false
                },
                {
                    "answer": "Это локальная VCS",
                    "comment": "Git доступен для MacOS, Windows и Linux/Unix. Это реализация распределенной системы контроля версий с открытым исходным кодом.",
                    "correct": false
                }
            ],
            "question": "Каковы две характеристики системы контроля версий (VSC - version control system) Git? (Выберите два.)"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "+",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "-",
                    "comment": "Символы, используемые в унифицированном файле различий, следующие:\n+: Указывает, что строка была добавлена\n-: Указывает, что строка была удалена\n/dev/null: Указывает, что файл был добавлен или удален\n@@: Указывает, что начинается следующий блок информации",
                    "correct": false
                },
                {
                    "answer": "/dev/null",
                    "comment": "Символы, используемые в унифицированном файле различий, следующие:\n+: Указывает, что строка была добавлена\n-: Указывает, что строка была удалена\n/dev/null: Указывает, что файл был добавлен или удален\n@@: Указывает, что начинается следующий блок информации",
                    "correct": false
                },
                {
                    "answer": "@@",
                    "comment": "Символы, используемые в унифицированном файле различий, следующие:\n+: Указывает, что строка была добавлена\n-: Указывает, что строка была удалена\n/dev/null: Указывает, что файл был добавлен или удален\n@@: Указывает, что начинается следующий блок информации",
                    "correct": false
                }
            ],
            "question": "Когда просматривается единый файл .diff, какой символ используется для обозначения добавления строки?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "код, который легко читать и понимать",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "код, выполняющий дискретную задачу",
                    "comment": "Чистый код — это код, отвечающий общим принципам, которые делают его легким для чтения и понимания. Вот некоторые из этих принципов:\nАккуратное форматирование в соответствии с общепринятыми практиками\nПрограммируйте интуитивно понятные переменные и объекты\nДокументировано с соответствующими комментариями\nНаписано так, чтобы его можно было повторно использовать и легко тестировать.",
                    "correct": false
                },
                {
                    "answer": "код, прошедший функциональное тестирование",
                    "comment": "Чистый код — это код, отвечающий общим принципам, которые делают его легким для чтения и понимания. Вот некоторые из этих принципов:\nАккуратное форматирование в соответствии с общепринятыми практиками\nПрограммируйте интуитивно понятные переменные и объекты\nДокументировано с соответствующими комментариями\nНаписано так, чтобы его можно было повторно использовать и легко тестировать.",
                    "correct": false
                },
                {
                    "answer": "код без комментариев рецензента",
                    "comment": "Чистый код — это код, отвечающий общим принципам, которые делают его легким для чтения и понимания. Вот некоторые из этих принципов:\nАккуратное форматирование в соответствии с общепринятыми практиками\nПрограммируйте интуитивно понятные переменные и объекты\nДокументировано с соответствующими комментариями\nНаписано так, чтобы его можно было повторно использовать и легко тестировать.",
                    "correct": false
                }
            ],
            "question": "Что такое чистый код?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "при первом использовании функции",
                    "comment": "Модули — это способ создания независимых и автономных блоков кода, которые можно использовать повторно. Модуль состоит из набора функций и обычно содержит интерфейс, обеспечивающий интеграцию с другими модулями. Модуль в Python — это файл Python с упакованными функциями.",
                    "correct": false
                },
                {
                    "answer": "когда функция упакована в один файл Python",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "когда функция инициируется во время выполнения программы Python",
                    "comment": "Модули — это способ создания независимых и автономных блоков кода, которые можно использовать повторно. Модуль состоит из набора функций и обычно содержит интерфейс, обеспечивающий интеграцию с другими модулями. Модуль в Python — это файл Python с упакованными функциями.",
                    "correct": false
                },
                {
                    "answer": "когда функция объявляется во время выполнения программы Python",
                    "comment": "Модули — это способ создания независимых и автономных блоков кода, которые можно использовать повторно. Модуль состоит из набора функций и обычно содержит интерфейс, обеспечивающий интеграцию с другими модулями. Модуль в Python — это файл Python с упакованными функциями.",
                    "correct": false
                }
            ],
            "question": "Разработчик создает некоторые функции на Python. Когда функция в Python называется модулем?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "**>>> url2 = Url('http', 'www.cisco.com')**",
                    "comment": "В Python классы — это средство объединения хранения данных и функциональности в единой структуре. Каждое объявление класса определяет новый тип объекта. Как и в случае с другими структурами данных и переменными Python, объекты класса создаются при первом использовании, а не предварительно объявляются с помощью оператора присваивания.",
                    "correct": false
                },
                {
                    "answer": "**>>> url2 = Url('www.cisco.com', 'http')**",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "**>>> url2 = Url('http', '://', 'www.cisco.com')**",
                    "comment": "В Python классы — это средство объединения хранения данных и функциональности в единой структуре. Каждое объявление класса определяет новый тип объекта. Как и в случае с другими структурами данных и переменными Python, объекты класса создаются при первом использовании, а не предварительно объявляются с помощью оператора присваивания.",
                    "correct": false
                },
                {
                    "answer": "**>>> url2 = Url(URL, 'http://', 'www.cisco.com')**",
                    "comment": "В Python классы — это средство объединения хранения данных и функциональности в единой структуре. Каждое объявление класса определяет новый тип объекта. Как и в случае с другими структурами данных и переменными Python, объекты класса создаются при первом использовании, а не предварительно объявляются с помощью оператора присваивания.",
                    "correct": false
                }
            ],
            "question": "Студент изучает Python в интерактивном режиме интерпретатора. Студент выдает следующие команды:\n\n```\n>>> class Url():\n... def __init__(self, host, prot):\n... self.host = host\n... self.prot = prot\n... self.url = self.prot + \"://\" + self.host\n...\n>>>\n```\nКакую команду должен использовать учащийся для создания объекта с одним атрибутом, являющимся действительным URL?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Вся кодовая база рассматривается на серии совещаний.",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Используется инструмент проверки кода коллегами для определения кода, который нуждается в повторном тестировании.",
                    "comment": "При официальном обзоре кода разработчики проводят серию совещаний, чтобы просмотреть всю кодовую базу и просмотреть код построчно, подробно обсуждая каждую из них. Формальный процесс проверки кода способствует обсуждению между всеми рецензентами.",
                    "correct": false
                },
                {
                    "answer": "Обеспечивает прямое взаимодействие между группой проверки и автором кода.",
                    "comment": "При официальном обзоре кода разработчики проводят серию совещаний, чтобы просмотреть всю кодовую базу и просмотреть код построчно, подробно обсуждая каждую из них. Формальный процесс проверки кода способствует обсуждению между всеми рецензентами.",
                    "correct": false
                },
                {
                    "answer": "Код автоматически отправляется на проверку системами управления исходным кодом после его регистрации.",
                    "comment": "При официальном обзоре кода разработчики проводят серию совещаний, чтобы просмотреть всю кодовую базу и просмотреть код построчно, подробно обсуждая каждую из них. Формальный процесс проверки кода способствует обсуждению между всеми рецензентами.",
                    "correct": false
                }
            ],
            "question": "Какая характеристика описывает формальную проверку кода?"
        },
        {
            "answerType": "multiChoice",
            "answers": [
                {
                    "answer": "Он включает в себя обзор всей кодовой базы в ходе серии совещаний.",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Он способствует обсуждению среди всех рецензентов.",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Он включает в себя разработчика, просматривающего код с рецензентом строка за строкой.",
                    "comment": "При официальном обзоре кода разработчики проводят серию совещаний, чтобы просмотреть всю кодовую базу и просмотреть код построчно, подробно обсуждая каждую из них. Формальный процесс проверки кода способствует обсуждению между всеми рецензентами.",
                    "correct": false
                },
                {
                    "answer": "Он позволяет разработчику вносить изменения на месте.",
                    "comment": "При официальном обзоре кода разработчики проводят серию совещаний, чтобы просмотреть всю кодовую базу и просмотреть код построчно, подробно обсуждая каждую из них. Формальный процесс проверки кода способствует обсуждению между всеми рецензентами.",
                    "correct": false
                },
                {
                    "answer": "Для более быстрого оборота в нем участвует только один рецензент.",
                    "comment": "При официальном обзоре кода разработчики проводят серию совещаний, чтобы просмотреть всю кодовую базу и просмотреть код построчно, подробно обсуждая каждую из них. Формальный процесс проверки кода способствует обсуждению между всеми рецензентами.",
                    "correct": false
                }
            ],
            "question": "Каковы две особенности формального обзора кода? (Выберите два.)"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "фигурные скобки {}",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "квадратные скобки []",
                    "comment": "Отдельные объекты в JSON состоят из пар ключ/значение. Эти отдельные пары могут быть окружены фигурными скобками. Объекты JSON также могут содержать несколько пар ключ/значение, разделенных запятыми, и в этом случае весь объект заключается в фигурные скобки.",
                    "correct": false
                },
                {
                    "answer": "круглые скобки ()",
                    "comment": "Отдельные объекты в JSON состоят из пар ключ/значение. Эти отдельные пары могут быть окружены фигурными скобками. Объекты JSON также могут содержать несколько пар ключ/значение, разделенных запятыми, и в этом случае весь объект заключается в фигурные скобки.",
                    "correct": false
                },
                {
                    "answer": "косая черта /",
                    "comment": "Отдельные объекты в JSON состоят из пар ключ/значение. Эти отдельные пары могут быть окружены фигурными скобками. Объекты JSON также могут содержать несколько пар ключ/значение, разделенных запятыми, и в этом случае весь объект заключается в фигурные скобки.",
                    "correct": false
                }
            ],
            "question": "Какие специальные символы используются для заключения объектов JSON?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "создания виртуальной среды Python 3 с именем devenv",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "активации виртуальной среды Python 3 с именем devenv",
                    "comment": "Синтаксис для создания виртуальной среды Python 3 в системе Linux: **python3 -m venv** *virtual_environment*, где **venv** — это модуль Python 3 для создания виртуальной среды, а **-m** — параметр, указывающий Python 3, что должен использоваться модуль venv.",
                    "correct": false
                },
                {
                    "answer": "установки наборов инструментов devnet в виртуальной среде Python 3 с именем venv",
                    "comment": "Синтаксис для создания виртуальной среды Python 3 в системе Linux: **python3 -m venv** *virtual_environment*, где **venv** — это модуль Python 3 для создания виртуальной среды, а **-m** — параметр, указывающий Python 3, что должен использоваться модуль venv.",
                    "correct": false
                },
                {
                    "answer": "войти в виртуальную среду Python 3 с именем venv, используя наборы инструментов devnet",
                    "comment": "Синтаксис для создания виртуальной среды Python 3 в системе Linux: **python3 -m venv** *virtual_environment*, где **venv** — это модуль Python 3 для создания виртуальной среды, а **-m** — параметр, указывающий Python 3, что должен использоваться модуль venv.",
                    "correct": false
                }
            ],
            "question": "Разработчик вводит команду Linux `python3 -m venv devenv`. Чего пытается добиться разработчик?"
        },
        {
            "answerType": "matching",
            "options": [
                {
                    "option": "простое утверждение о том, что нужно пользователю и почему",
                    "match": "1"
                },
                {
                    "option": "использует стендапы для обзора прогресса",
                    "match": "2"
                },
                {
                    "option": "ограниченный период времени, в течение которого разрабатывается работающее программное обеспечение",
                    "match": "3"
                },
                {
                    "option": "невыполненное задание, состоящее из всех функций программного обеспечения в порядке приоритетности",
                    "match": "4"
                }
            ],
            "answers": [
                {
                    "answer": "история",
                    "match": "1"
                },
                {
                    "answer": "команда scrum",
                    "match": "2"
                },
                {
                    "answer": "спринт",
                    "match": "3"
                },
                {
                    "answer": "бэклог",
                    "match": "4"
                }
            ],
            "question": "Соотнесите термин Lean с описанием."
        },
        {
            "answerType": "matching",
            "options": [
                {
                    "option": "обновляет локальную копию репозитория Git содержимым удаленного репозитория Git",
                    "match": "1"
                },
                {
                    "option": "создает пустой репозиторий Git или делает существующую папку репозиторием Git",
                    "match": "2"
                },
                {
                    "option": "обновляет удаленный репозиторий Git изменениями содержимого из локального репозитория Git.",
                    "match": "3"
                }
            ],
            "answers": [
                {
                    "answer": "git pull",
                    "match": "1"
                },
                {
                    "answer": "git init",
                    "match": "2"
                },
                {
                    "answer": "git push",
                    "match": "3"
                }
            ],
            "question": "Сопоставьте команду Git с ее функцией."
        }
    ],
    "skills": {},
    "tags": {
        "$ref": "../../material-tags.json"
    },
    "assets": {
        "$ref": "./assets"
    }
}