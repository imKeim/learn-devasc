{
    "description": "Нажмите ``Начать прохождение`` для отображения вопросов и выберите самый подходящий ответ",
    "difficulty": 1,
    "duration": "PT0H30M",
    "materialType": "test",
    "passingScore": 100,
    "questions": [
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "$300,000.00 в час",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "$500,000.00 в час",
                    "comment": "Тема 7.1.0. Согласно отчету Gartner за 2014 г., в случае сбоя системы средняя стоимость часа простоя крупного предприятия составляет 300 000,00 долларов США в час. Большая часть времени простоя будет включать в себя задачи ручной настройки, которые могут занять много времени и могут привести к повышенному риску неправильной настройки.",
                    "correct": false
                },
                {
                    "answer": "$100,000.00 в час",
                    "comment": "Тема 7.1.0. Согласно отчету Gartner за 2014 г., в случае сбоя системы средняя стоимость часа простоя крупного предприятия составляет 300 000,00 долларов США в час. Большая часть времени простоя будет включать в себя задачи ручной настройки, которые могут занять много времени и могут привести к повышенному риску неправильной настройки.",
                    "correct": false
                },
                {
                    "answer": "$700,000.00 в час",
                    "comment": "Тема 7.1.0. Согласно отчету Gartner за 2014 г., в случае сбоя системы средняя стоимость часа простоя крупного предприятия составляет 300 000,00 долларов США в час. Большая часть времени простоя будет включать в себя задачи ручной настройки, которые могут занять много времени и могут привести к повышенному риску неправильной настройки.",
                    "correct": false
                }
            ],
            "question": "Какова средняя стоимость часа простоя предприятия для крупнейших предприятий?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "качество программного обеспечения",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "уровень безопасности программного обеспечения",
                    "comment": "Тема 7.3.0. Идемпотентность — это повторяющаяся тема в области автоматизации, которая относится к качеству программного обеспечения.",
                    "correct": false
                },
                {
                    "answer": "скрипт команд оболочки",
                    "comment": "Тема 7.3.0. Идемпотентность — это повторяющаяся тема в области автоматизации, которая относится к качеству программного обеспечения.",
                    "correct": false
                },
                {
                    "answer": "повторное использование команд оболочки",
                    "comment": "Тема 7.3.0. Идемпотентность — это повторяющаяся тема в области автоматизации, которая относится к качеству программного обеспечения.",
                    "correct": false
                }
            ],
            "question": "Что такое идемпотентность в автоматизации ИТ?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "show ip interface brief",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "ip address",
                    "comment": "Тема 7.4.0. Краткую команду **show ip interface** можно использовать для проверки IP-адреса, настроенного на маршрутизаторе. Команду **show running-config** можно использовать для просмотра того, как IP-адреса назначаются интерфейсам; однако, если интерфейс получает IP-адрес от DHCP-сервера, текущая конфигурация не будет отображать фактически назначенный IP-адрес. Команда **ip address** используется на хосте Linux для отображения информации о сетевых интерфейсах.",
                    "correct": false
                },
                {
                    "answer": "show running-config",
                    "comment": "Тема 7.4.0. Краткую команду **show ip interface** можно использовать для проверки IP-адреса, настроенного на маршрутизаторе. Команду **show running-config** можно использовать для просмотра того, как IP-адреса назначаются интерфейсам; однако, если интерфейс получает IP-адрес от DHCP-сервера, текущая конфигурация не будет отображать фактически назначенный IP-адрес. Команда **ip address** используется на хосте Linux для отображения информации о сетевых интерфейсах.",
                    "correct": false
                },
                {
                    "answer": "show ip route",
                    "comment": "Тема 7.4.0. Краткую команду **show ip interface** можно использовать для проверки IP-адреса, настроенного на маршрутизаторе. Команду **show running-config** можно использовать для просмотра того, как IP-адреса назначаются интерфейсам; однако, если интерфейс получает IP-адрес от DHCP-сервера, текущая конфигурация не будет отображать фактически назначенный IP-адрес. Команда **ip address** используется на хосте Linux для отображения информации о сетевых интерфейсах.",
                    "correct": false
                }
            ],
            "question": "Студент создает playbook Ansible, чтобы попрактиковаться в автоматизации управления маршрутизатором Cisco. Какую команду должен добавить учащийся в playbook, чтобы найти имена интерфейсов, назначенные IP-адреса и статус интерфейсов на маршрутизаторе?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Сбой не должен влиять на методологию проектирования программного обеспечения.",
                    "comment": "Тема 7.2.0. Один из многих основных принципов и лучших практик DevOps/SRE заключается в том, что сбой — это нормально. Существует предположение, что сбои будут происходить и что эти события повлияют на методологию проектирования программного обеспечения.",
                    "correct": false
                },
                {
                    "answer": "Сбой должен происходить только в Ops.",
                    "comment": "Тема 7.2.0. Один из многих основных принципов и лучших практик DevOps/SRE заключается в том, что сбой — это нормально. Существует предположение, что сбои будут происходить и что эти события повлияют на методологию проектирования программного обеспечения.",
                    "correct": false
                },
                {
                    "answer": "Отказ — это просто «ремонт».",
                    "comment": "Тема 7.2.0. Один из многих основных принципов и лучших практик DevOps/SRE заключается в том, что сбой — это нормально. Существует предположение, что сбои будут происходить и что эти события повлияют на методологию проектирования программного обеспечения.",
                    "correct": false
                },
                {
                    "answer": "Отказ — это нормально.",
                    "comment": "",
                    "correct": true
                }
            ],
            "question": "При следовании передовым практикам и основным принципам DevOps как воспринимается отказ?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "переключение выбранных пользователей на развертывание новой версии",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "посерверное переключение на развертывание новой версии",
                    "comment": "Тема 7.5.0. Канареечное развертывание происходит, когда проект развертывается для небольшой части пользователей, чтобы снизить риск и улучшить качество обратной связи.",
                    "correct": false
                },
                {
                    "answer": "использование двух одинаковых серверов с балансировщиками нагрузки для перенаправления трафика для всего сервера по мере необходимости",
                    "comment": "Тема 7.5.0. Канареечное развертывание происходит, когда проект развертывается для небольшой части пользователей, чтобы снизить риск и улучшить качество обратной связи.",
                    "correct": false
                },
                {
                    "answer": "производственное испытание с использованием специального инструмента для внедрения случайных сбоев с ограниченным радиусом действия",
                    "comment": "Тема 7.5.0. Канареечное развертывание происходит, когда проект развертывается для небольшой части пользователей, чтобы снизить риск и улучшить качество обратной связи.",
                    "correct": false
                }
            ],
            "question": "Что такое canary-развертывание?"
        },
        {
            "answerType": "multiChoice",
            "answers": [
                {
                    "answer": "использование общих хост-сред",
                    "comment": "Тема 7.1.0. Проблемы при использовании облачных технологий включают следующее: \n * Облачные разрешения могут быть сложными в управлении, а контроль разрешений и доступа имеет решающее значение. \n * Частные и общедоступные облачные среды могут вызвать путаницу из-за различных пользовательских интерфейсов, API и особенностей. \n * Потребление облачных ресурсов может быть трудно отследить, а также могут возникнуть непредвиденные затраты, которые трудно рассчитать.",
                    "correct": false
                },
                {
                    "answer": "управление затратами",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "поддержание контроля доступа",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "запрос дополнительных ресурсов",
                    "comment": "Тема 7.1.0. Проблемы при использовании облачных технологий включают следующее: \n * Облачные разрешения могут быть сложными в управлении, а контроль разрешений и доступа имеет решающее значение. \n * Частные и общедоступные облачные среды могут вызвать путаницу из-за различных пользовательских интерфейсов, API и особенностей. \n * Потребление облачных ресурсов может быть трудно отследить, а также могут возникнуть непредвиденные затраты, которые трудно рассчитать.",
                    "correct": false
                },
                {
                    "answer": "поддержание согласованности конфигурации платформ",
                    "comment": "Тема 7.1.0. Проблемы при использовании облачных технологий включают следующее: \n * Облачные разрешения могут быть сложными в управлении, а контроль разрешений и доступа имеет решающее значение. \n * Частные и общедоступные облачные среды могут вызвать путаницу из-за различных пользовательских интерфейсов, API и особенностей. \n * Потребление облачных ресурсов может быть трудно отследить, а также могут возникнуть непредвиденные затраты, которые трудно рассчитать.",
                    "correct": false
                }
            ],
            "question": "Каковы две проблемы технологий облачных вычислений? (Выберите два.)"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Git",
                    "comment": "Тема 7.7.0 — Cisco VIRL — идеальный инструмент для изучения и моделирования сетей, который может работать на «голом железе» или на больших виртуальных машинах на нескольких платформах гипервизора.",
                    "correct": false
                },
                {
                    "answer": "Mappet",
                    "comment": "Тема 7.7.0 — Cisco VIRL — идеальный инструмент для изучения и моделирования сетей, который может работать на «голом железе» или на больших виртуальных машинах на нескольких платформах гипервизора.",
                    "correct": false
                },
                {
                    "answer": "VIRL",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Ansible",
                    "comment": "Тема 7.7.0 — Cisco VIRL — идеальный инструмент для изучения и моделирования сетей, который может работать на «голом железе» или на больших виртуальных машинах на нескольких платформах гипервизора.",
                    "correct": false
                }
            ],
            "question": "Какая технология может работать на «голом железе» или на больших виртуальных машинах для имитации сетей и коммунальных услуг Cisco?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "инвентарный файл (inventory)",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "файл плейбук (playbook)",
                    "comment": "Тема 7.4.0 — Ansible использует файл инвентаризации, также называемый файлом hosts, который содержит информацию об устройстве, используемую плейбуками Ansible.",
                    "correct": false
                },
                {
                    "answer": "папки и файлы ролей (roles)",
                    "comment": "Тема 7.4.0 — Ansible использует файл инвентаризации, также называемый файлом hosts, который содержит информацию об устройстве, используемую плейбуками Ansible.",
                    "correct": false
                },
                {
                    "answer": "файл переменных (variable)",
                    "comment": "Тема 7.4.0 — Ansible использует файл инвентаризации, также называемый файлом hosts, который содержит информацию об устройстве, используемую плейбуками Ansible.",
                    "correct": false
                }
            ],
            "question": "Аналитик использует Ansible для выполнения задач удаленного управления сетевыми устройствами. Какой тип файла находится в файловой структуре Ansible, описывающей управляемые устройства?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Это метод измерения допустимых ошибок в качестве ограничения скорости релиза.",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Это внутренняя метрика для расчета фактической доступности службы.",
                    "comment": "Тема 7.2.0 — Бюджеты ошибок определяют количество допустимых ошибок в единицу времени, а также используются в качестве порога скорости выпуска.",
                    "correct": false
                },
                {
                    "answer": "Это передовой показатель доступности, эквивалентный шести минутам незапланированного автономного использования в год.",
                    "comment": "Тема 7.2.0 — Бюджеты ошибок определяют количество допустимых ошибок в единицу времени, а также используются в качестве порога скорости выпуска.",
                    "correct": false
                },
                {
                    "answer": "Это запланированный процент денежного контракта, который возвращается клиенту, когда SLO не выполняется.",
                    "comment": "Тема 7.2.0 — Бюджеты ошибок определяют количество допустимых ошибок в единицу времени, а также используются в качестве порога скорости выпуска.",
                    "correct": false
                }
            ],
            "question": "Что такое бюджет ошибок в культуре DevOps/SRE?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Javascript",
                    "comment": "Тема 7.4.0 - В репозитории код организован в папки «поваренной книги», содержащие «рецепты» (фактический код линейной конфигурации, написанный на расширенном синтаксисе Ruby Chef).",
                    "correct": false
                },
                {
                    "answer": "Bash",
                    "comment": "Тема 7.4.0 - В репозитории код организован в папки «поваренной книги», содержащие «рецепты» (фактический код линейной конфигурации, написанный на расширенном синтаксисе Ruby Chef).",
                    "correct": false
                },
                {
                    "answer": "Python",
                    "comment": "Тема 7.4.0 - В репозитории код организован в папки «поваренной книги», содержащие «рецепты» (фактический код линейной конфигурации, написанный на расширенном синтаксисе Ruby Chef).",
                    "correct": false
                },
                {
                    "answer": "Ruby",
                    "comment": "",
                    "correct": true
                }
            ],
            "question": "Какой язык программирования использует Chef для выполнения рецептов?"
        },
        {
            "answerType": "singleChoice",
            "answers": [
                {
                    "answer": "Войти в виртуальную среду Python3 с именем venv, используя наборы инструментов devnet",
                    "comment": "Тема 7.6.0. Синтаксис для создания виртуальной среды Python 3 в системе Linux: **python3 -m venv virtual_environment**, где **venv** — это модуль Python 3 для создания виртуальной среды, а **-m** — переключатель, сообщающий Python 3 о модуле venv.",
                    "correct": false
                },
                {
                    "answer": "Создания виртуальной среды Python3 с именем devenv",
                    "comment": "",
                    "correct": true
                },
                {
                    "answer": "Активировать виртуальную среду Python3 с именем devenv",
                    "comment": "Тема 7.6.0. Синтаксис для создания виртуальной среды Python 3 в системе Linux: **python3 -m venv virtual_environment**, где **venv** — это модуль Python 3 для создания виртуальной среды, а **-m** — переключатель, сообщающий Python 3 о модуле venv.",
                    "correct": false
                },
                {
                    "answer": "Установить наборы инструментов devnet в виртуальной среде Python 3 с именем venv",
                    "comment": "Тема 7.6.0. Синтаксис для создания виртуальной среды Python 3 в системе Linux: **python3 -m venv virtual_environment**, где **venv** — это модуль Python 3 для создания виртуальной среды, а **-m** — переключатель, сообщающий Python 3 о модуле venv.",
                    "correct": false
                }
            ],
            "question": "Разработчик вводит команду Linux **python3 -m venv devenv**. Чего пытается добиться разработчик?"
        }
    ],
    "skills": {},
    "tags": {
        "$ref": "../../material-tags.json"
    },
    "title": "Тест на понимание темы: Введение в автоматизацию, разработку и развертывание приложений с помощью Cisco",
    "assets": {
        "$ref": "./assets"
    }
}